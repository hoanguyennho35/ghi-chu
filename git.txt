**chú thích
untracked		git chua theo dõi
unmodified		không có bất kỳ sự thay đổi nào so với lần commit cuối
modifide		nội dung có sự thay đổi so với lần commit cuối
staged			nội dung đã được sẵn sàng chuẩn để commit lưu vào base dữ liệu
branch			ở nhánh nào thu mục làm việc với tất cả các file trên nhánh đó

**thao tác
cd ./ten_/		mở thư mục tên
yum install git -y	cài git
cd đường_dẫn		mở tập tin
ls      xem các mục bên trong
cat tên_file      xem nội dung trong file
clear			xóa màn hình
git config --global user.username "hoanguyennho"
git config --global user.email "abc@gmail"
git config --global user.password "matkhau"
git config --list			kiểm tra danh sách
git config --global --unset user.name   xóa bỏ username

**dòng lệnh
&git init		khởi tạo kho git để sử dụng các lệnh của git
&git status		kiểm tra trạng thái thư mục làm việc git
&git add .		đưa vào staged chuẩn bị commit
&git commit -m "ghi_chú"	dua vào commit
&git log 		kiểm tra chi tiết các commit
git diff   nếu staged k có dữ liệu so sánh thư mục làm việc và commit cuối
		nếu staged có dữ liệu so sánh thư mục làm việc và staged
git diff --staged  so sánh giữa staged và commit cuối "dài quá nhấn q để thoát"
&git log --oneline  hiện các commit vắn tắt
git log --oneline origan/master 	kiểm tra commit trên origan nhánh master
git checkout mã --tên   khôi phục file tên về mã đưa vào staged
touch .gitignore		mở và để loại trừ k theo dõi (*.img   cached)
git restore (name or .)	phục hồi các file bị xóa từ commit cuối
git restore --staged tên    loại bỏ file tên ra staged
$git commit --amend -m ten    update lai commit cuoi
git reset --hard HEAD~1   xóa commit cuối cùng nội dung trả về cho commit trước k lưu dữ liệu
git reset --soft HEAD~1  xóa commit cuối nhưng nội dung trong commit cuối đưa vào staged có lưu dữ liệu
git restore . khôi phục các file về trạng thái như ở commit cuối cùng

*****4
git branch   kiểm tra xem có bao nhiêu nhánh branch
git branch tên_nhánh       tạo nhánh mới
git checkout tên_nhánh      chuyển sang nhánh tên_nhánh
git switch tên_nhánh        ""
git merge tên_nhánh         gộp nhánh hiện tại với tên_nhánh (nhánh hiện tại là commit cuối để tránh xung đột) (20:00 (04))
&git branch -d tên_nhánh      xóa nhánh tên_nhánh
git merge --abort           trả các nhành về hiện trạng trước khi gộp bị xung đột
git log --oneline --graph   vẽ sơ đồ phân nhánh
git mergetool             sửa đổi sung đột nhánh khi gộp 
				:diffg Re(Lo)giữ lại local hay remote-->ba cả 2	:wq thoát
pwd             hiện thư mục git
   
*********5
git push			up dữ liệu từ local lên remote
git push --all             up tất cả nhánh từ local lên remote do git push -u đánh dấu mặc định tên remote
&git push tên_remote  tên_nhánh(--all)           up dữ liệu tên_nhánh từ local lên remote hay up tất cả nhánh
git push -u    tên_remote   tên_nhánh           đánh dấu đường dẫn lần sau chỉ cần git push tự up lên
git push --delete tên_remote  tên nhánh        xóa nhánh trên remote
git clone            tải thư mục kho chứa trên remote
git remote add tên(ký_hiệu) địa_chỉ_liên_kết        đặt tên đường dẫn cho local truy cập vào remote
git remote rm tên        xóa remote tên đường dẫn
git remote -v       kiểm tra địa chỉ của remote
git fetch tên_remote        kiểm tra xem có sự thay đổi giữa remote và local chưa thay đổi ngay
&git pull tên_remote tên_nhánh        lấy dữ liệu tên_nhánh từ remote về local thay đổi luôn
										git fetch +git merge

***không lưu file
vào noted ghi tên các tập tin, file ngăn cách dấu xuống dòng giữa các file sao đó ra lưu .gitignore
git branch --all		 kiểm tra các nhánh của remote và local
git log --oneline ten_remote/branch_remote			kiểm tra lịch sử commit
git fetch remote branch_remote					cập nhật dữ liệu từ remote nhưng chưa thay đổi màn hình làm việc
												mục đích sử dụng với git status so sánh
git pull									vừa cập nhật dữ liệu từ remote về và gộp với thư mục hiện hành
git pull remote ten_nhanh_remote --allow-unrelated-histories
git merge ten_nhanh							gộp nhánh ten_nhanh với nhánh đang chọn
git push remote ten_nhanh_local							up dữ liệu từ local lên remote
git remote add ten dia_chi					thêm remote
git remote -v								kiểm tra đường dẫn